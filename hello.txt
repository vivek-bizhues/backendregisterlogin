// Verification route
// router.post('/verify', (req, res) => {
//   const { email, otp } = req.body;
//   const token = req.headers.authorization;

//   // Verify the JWT token
//   jwt.verify(token, 'your-secret-key', (err, decoded) => {
//     if (err) {
//       res.status(401).json({ message: 'Invalid token' });
//     } else if (decoded.email === email && decoded.otp === otp) {
//       // Update user's registration status to true
//       User.updateOne({ email }, { isVerified: true }, (updateErr) => {
//         if (updateErr) {
//           res.status(500).json({ message: 'Verification failed' });
//         } else {
//           res.json({ message: 'Email verified successfully' });
//         }
//       });
//     } else {
//       res.status(400).json({ message: 'Invalid OTP' });
//     }
//   });
// });